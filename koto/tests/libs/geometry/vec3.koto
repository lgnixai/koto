from geometry import vec2, vec3

@tests =
  @test vec3: ||
    assert_eq vec3(), (vec3 0)
    assert_eq (vec3 1), (vec3 1, 0)
    assert_eq (vec3 1, 2), (vec3 1, 2, 0)
    assert_eq (vec3 1, 2, 3), (vec3 1, 2, 3)
    assert_eq (vec3 (vec2 1, 2), 3), (vec3 1, 2, 3)
    assert_eq (vec3 vec3 1, 2, 3), (vec3 1, 2, 3)

  @test add: ||
    assert_eq (vec3 1, 2, 3) + (vec3 4, 5, 6), vec3 5, 7, 9
    assert_eq (vec3 1, 2, 3) + 100, vec3 101, 102, 103

  @test subtract: ||
    assert_eq (vec3 1, 2, 3) - (vec3 4, 5, 6), vec3 -3, -3, -3
    assert_eq (vec3 1, 2, 3) - 100, vec3 -99, -98, -97

  @test multiply: ||
    assert_eq (vec3 1, 2, 3) * (vec3 4, 5, 6), vec3 4, 10, 18
    assert_eq (vec3 1, 2, 3) * 100, vec3 100, 200, 300

  @test divide: ||
    assert_eq (vec3 1, 2, 3) / (vec3 4, 5, 6), vec3 0.25, 0.4, 0.5
    assert_eq (vec3 1, 2, 3) / 100, vec3 0.01, 0.02, 0.03

  @test negate: ||
    assert_eq -(vec3 1, 2, 3), (vec3 -1, -2, -3)
    assert_eq -(vec3 -3, -4, 5), (vec3 3, 4, -5)

  @test add_assign: ||
    x = vec3 1, 2, 3
    x += vec3 2, 3, 4
    assert_eq x, vec3 3, 5, 7

  @test equality: ||
    assert_eq (vec3 1, 2, 3), (vec3 1, 2, 3)
    assert_ne (vec3 1, 2, 3), (vec3 3, 2, 1)

  @test index: ||
    assert_eq (vec3 1, 2, 3)[0], 1
    assert_eq (vec3 4, 5, 6)[1], 5
    assert_eq (vec3 7, 8, 9)[2], 9
    x, y, z = vec3 10, 11, 12
    assert_eq (x, y, z), (10, 11, 12)
