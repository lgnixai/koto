@tests =
  @test arithmetic: ||
    assert_eq 1 + 1, 2
    assert_eq 2 - 2, 0
    assert_eq 1+2*3+4, 11 # whitespace around operators is conventional but optional
    assert_eq 1.5 * 4.0, 6.0
    assert_eq 1.5 * 4.0, 6.0
    assert_eq 9 / 3 + 1, 4
    assert_eq (3 - 2) / (4 - 2), 0.5
    assert_eq 2 + 5 % 3, 4

  @test long_expression: ||
    # Long expressions can be broken before and after operators
    a = 1 +
        2 * 3
            # Comments don't interrupt the expression
        + 5 + 5
        + 9 / 3
    assert_eq a, 20

  @test assignment_operators: ||
    x = 0
    x += 2
    assert_eq x, 2
    x *= 4
    assert_eq x, 8
    x -= 2
    assert_eq x, 6
    x /= 2
    assert_eq x, 3
    x %= 2
    assert_eq x, 1

  @test binary_notation: ||
    assert_eq 0b0, 0
    assert_eq 0b10, 2
    assert_eq -0b1000, -8
    assert_eq 0b101010, 42

  @test octal_notation: ||
    assert_eq 0o0, 0
    assert_eq 0o10, 8
    assert_eq -0o1000, -512
    assert_eq 0o707606, 233350

  @test hex_notation: ||
    assert_eq 0x0, 0
    assert_eq 0xf, 15
    assert_eq -0x1000, -4096
    assert_eq 0xabadcafe, 2880293630
    assert_eq 0xfacade, 0xFACADE
