@tests =
  @test basic_assignment: ||
    a = 1
    b = -a
    assert_eq a, -b

  @test multi_assignment: ||
    a, b, c, d, e = 1, 2, 3, 4, 5, 6, 7, 8,
    assert_eq c, 3
    assert_eq e, 5

  @test chained_assignment: ||
    a = b = "foo"
    assert_eq a, "foo"
    assert_eq b, "foo"

  @test unicode_identifiers: ||
    やあ = héllø = 99
    assert_eq héllø, 99
    assert_eq やあ, 99

  @test assignment_returns_value: ||
    assert_eq (a = 42), 42
    assert_eq (x = 99), 99
    assert_eq a, 42
    assert_eq x, 99

  @test export_assignment: ||
    f = ||
      export x = 42
    f()
    assert_eq x, 42

    f2 = ||
      export x = x * 2
    f2()
    assert_eq x, 84

    f3 = ||
      x = x + 15 # assigning x in local scope
      assert_eq x, 99
    f3()
    assert_eq x, 84 # exported x remains the same

  @test multiline_assignment: ||
    f = |n| n
    a, b, c =
      1,
      (f 2),
      (f 3),
    assert_eq a, 1
    assert_eq b, 2
    assert_eq c, 3

  @test assign_null: ||
    a = null
    assert_eq a, null
    assert_ne 1, null

    b = () # Empty parentheses resolve to null
    assert_eq a, b
